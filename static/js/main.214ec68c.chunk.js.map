{"version":3,"sources":["utils/searchHelper.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","PeopleFilters","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","sex","centuries","getAll","isActiveCentury","century","includes","isActive","newSex","search","handleSexChange","newSearchParams","className","classNames","to","pathname","onClick","type","placeholder","onChange","event","target","map","filter","c","params","newCenturies","centur","toggleCenturies","clearCenturies","href","Loader","PeopleTable","people","filtredPeople","slug","useParams","getSortParamsFromUrl","sort","order","useState","sortParams","setSortParams","useEffect","sortedPeople","a","b","name","localeCompare","born","died","getSortLink","sortType","currentSort","currentOrder","person","motherName","some","man","find","fatherName","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","setPeople","setFiltredPeople","isLoading","setIsLoading","loadingError","setLoadingError","getPeople","data","catch","error","console","urlSearchParams","newPeople","bornYear","toLowerCase","length","Math","ceil","getLinkClass","Navbar","role","NotFoundPage","App","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.214ec68c.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import classNames from 'classnames';\nimport {\n  Link, useLocation, useSearchParams,\n} from 'react-router-dom';\nimport { getSearchWith } from '../utils/searchHelper';\n\nexport const PeopleFilters = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  const isActiveCentury = (century: string) => centuries.includes(century);\n\n  const isActive = (newSex: string) => {\n    if (newSex === '') {\n      return !location.search || !location.search.includes('sex');\n    }\n\n    return location.search.includes(`sex=${newSex}`);\n  };\n\n  function toggleCenturies(century: string) {\n    const params = new URLSearchParams(searchParams);\n    const newCenturies = centuries.includes(century)\n      ? centuries.filter(centur => centur !== century)\n      : [...centuries, century];\n\n    params.delete('centuries');\n    newCenturies.forEach(centur => params.append('centuries', centur));\n\n    setSearchParams(params);\n  }\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const paramsToUpdate = { query: event.target.value || null };\n    const newSearchParams = getSearchWith(searchParams, paramsToUpdate);\n\n    setSearchParams(newSearchParams);\n  }\n\n  function handleSexChange(newSex: string) {\n    const paramsToUpdate = { sex: newSex || null };\n    const newSearchParams = getSearchWith(searchParams, paramsToUpdate);\n\n    setSearchParams(newSearchParams);\n  }\n\n  function clearCenturies() {\n    const paramsToUpdate = { centuries: [] };\n    const newSearchParams = getSearchWith(searchParams, paramsToUpdate);\n\n    setSearchParams(newSearchParams);\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={classNames(\n            { 'is-active': sex === '' },\n          )}\n          to={{\n            pathname: '/people',\n            search: getSearchWith(searchParams, { sex: null }),\n          }}\n          onClick={() => handleSexChange('')}\n        >\n          All\n        </Link>\n        <Link\n          className={classNames(\n            { 'is-active': isActive('m') },\n          )}\n          to={{\n            pathname: '/people',\n            search: getSearchWith(searchParams, { sex: 'm' }),\n          }}\n          onClick={() => handleSexChange('m')}\n        >\n          Male\n        </Link>\n        <Link\n          className={classNames(\n            { 'is-active': isActive('f') },\n          )}\n          to={{\n            pathname: '/people',\n            search: getSearchWith(searchParams, { sex: 'f' }),\n          }}\n          onClick={() => handleSexChange('f')}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {[16, 17, 18, 19, 20].map(century => (\n              <Link\n                key={century}\n                data-cy=\"century\"\n                className={classNames('button', 'mr-1', {\n                  'is-info': isActiveCentury(century.toString()),\n                })}\n                to={{\n                  pathname: '/people',\n                  search: getSearchWith(searchParams, {\n                    centuries: isActiveCentury(century.toString())\n                      ? centuries.filter(c => c !== century.toString())\n                      : [...centuries, century.toString()],\n                  }),\n                }}\n                onClick={() => toggleCenturies(century.toString())}\n              >\n                {century}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              to={{\n                pathname: '/people',\n                search: getSearchWith(searchParams, { centuries: [] }),\n              }}\n              onClick={() => clearCenturies()}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getSearchWith } from '../utils/searchHelper';\n\nconst NOTHING = '-';\n\nexport const PeopleTable = (\n  { people, filtredPeople }: { people: Person[], filtredPeople: Person[] },\n) => {\n  const { slug } = useParams<{ slug: string }>();\n  const location = useLocation();\n\n  const getSortParamsFromUrl = () => {\n    const searchParams = new URLSearchParams(location.search);\n    const sort = searchParams.get('sort');\n    const order = searchParams.get('order') || 'asc'; // Default order ascending\n\n    return { sort, order };\n  };\n\n  const [sortParams, setSortParams] = useState(getSortParamsFromUrl);\n\n  useEffect(() => {\n    setSortParams(getSortParamsFromUrl());\n  }, [location.search]);\n\n  const sortedPeople = [...filtredPeople].sort((a, b) => {\n    const { sort, order } = sortParams;\n\n    if (sort === 'name') {\n      return order === 'asc'\n        ? a.name.localeCompare(b.name)\n        : b.name.localeCompare(a.name);\n    }\n\n    if (sort === 'sex') {\n      return order === 'asc'\n        ? a.sex.localeCompare(b.sex)\n        : b.sex.localeCompare(a.sex);\n    }\n\n    if (sort === 'born') {\n      return order === 'asc' ? a.born - b.born : b.born - a.born;\n    }\n\n    if (sort === 'died') {\n      return order === 'asc' ? a.died - b.died : b.died - a.died;\n    }\n\n    return 0;\n  });\n\n  const getSortLink = (sortType: string) => {\n    const currentParams = new URLSearchParams(location.search);\n    const currentSort = currentParams.get('sort');\n    const currentOrder = currentParams.get('order');\n\n    if (currentSort === sortType) {\n      if (currentOrder === 'asc') {\n        currentParams.set('order', 'desc');\n      } else {\n        currentParams.delete('sort');\n        currentParams.delete('order');\n      }\n    } else {\n      currentParams.set('sort', sortType);\n      currentParams.set('order', 'asc');\n    }\n\n    return `/people?${currentParams.toString()}`;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <Link\n                to={getSortLink('name')}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('fas', {\n                    'fa-sort': sortParams.sort !== 'name',\n                    'fa-sort-up': sortParams.sort === 'name'\n                      && sortParams.order === 'asc',\n                    'fa-sort-down': sortParams.sort === 'name'\n                      && sortParams.order === 'desc',\n                  })}\n                  />\n                </span>\n              </Link>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <Link to={getSortLink('sex')}>\n                <span className=\"icon\">\n                  <i className={classNames('fas', {\n                    'fa-sort': sortParams.sort !== 'sex',\n                    'fa-sort-up': sortParams.sort === 'sex'\n                      && sortParams.order === 'asc',\n                    'fa-sort-down': sortParams.sort === 'sex'\n                      && sortParams.order === 'desc',\n                  })}\n                  />\n                </span>\n              </Link>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <Link to={getSortLink('born')}>\n                <span className=\"icon\">\n                  <i className={classNames('fas', {\n                    'fa-sort': sortParams.sort !== 'born',\n                    'fa-sort-up': sortParams.sort === 'born'\n                      && sortParams.order === 'asc',\n                    'fa-sort-down': sortParams.sort === 'born'\n                      && sortParams.order === 'desc',\n                  })}\n                  />\n                </span>\n              </Link>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <Link to={getSortLink('died')}>\n                <span className=\"icon\">\n                  <i className={classNames('fas', {\n                    'fa-sort': sortParams.sort !== 'died',\n                    'fa-sort-up': sortParams.sort === 'died'\n                      && sortParams.order === 'asc',\n                    'fa-sort-down': sortParams.sort === 'died'\n                      && sortParams.order === 'desc',\n                  })}\n                  />\n                </span>\n              </Link>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedPeople.map((person: Person) => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <Link\n                to={{\n                  pathname: `/people/${person.slug}`,\n                  search: getSearchWith(new URLSearchParams(location.search), {\n                    slug: new URLSearchParams(location.search).get('slug'),\n                  }),\n                }}\n                className={classNames(\n                  { 'has-text-danger': person.sex === 'f' },\n                )}\n              >\n                {person.name}\n              </Link>\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.motherName\n                && people.some(man => man.name === person.motherName) ? (\n                  <Link\n                    to={{\n                      pathname: `/people/${people.find(man => man.name === person.motherName)?.slug || ''}`,\n                      search: getSearchWith(new\n                      URLSearchParams(location.search), {\n                        slug: new URLSearchParams(location.search).get('slug'),\n                      }),\n                    }}\n                    className=\"has-text-danger\"\n                  >\n                    {person.motherName}\n                  </Link>\n                ) : (\n                  person.motherName || NOTHING\n                )}\n            </td>\n            <td>\n              {person.fatherName\n                && people.some(man => man.name === person.fatherName) ? (\n                  <Link\n                    to={{\n                      pathname: `/people/${people.find(man => man.name === person.fatherName)?.slug || ''}`,\n                      search: getSearchWith(new\n                      URLSearchParams(location.search), {\n                        slug: new URLSearchParams(location.search).get('slug'),\n                      }),\n                    }}\n                  >\n                    {person.fatherName}\n                  </Link>\n                ) : (\n                  person.fatherName || NOTHING\n                )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [filtredPeople, setFiltredPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadingError, setLoadingError] = useState(false);\n  const location = useLocation();\n\n  function getCentury(bornYear: number) {\n    const century = Math.ceil(bornYear / 100);\n\n    return century;\n  }\n\n  useEffect(() => {\n    getPeople()\n      .then((data) => {\n        setPeople(data);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.error('Error fetching people data:', error);\n        setIsLoading(false);\n        setLoadingError(true);\n      });\n  }, []);\n\n  useEffect(() => {\n    const urlSearchParams = new URLSearchParams(location.search);\n    const query = urlSearchParams.get('query');\n    const sex = urlSearchParams.get('sex');\n    const centuries = urlSearchParams.getAll('centuries');\n\n    const newPeople = people.filter(person => (\n      (query === null || person.name.toLowerCase().includes(query.toLowerCase())\n      || person.motherName?.toLowerCase().includes(query.toLowerCase())\n      || person.fatherName?.toLowerCase().includes(query.toLowerCase()))\n      && (sex === null || person.sex === sex)\n      && (centuries.length === 0 || centuries\n        .includes(getCentury(person.born).toString()))\n    ));\n\n    setFiltredPeople(newPeople);\n  }, [location.search, people]);\n\n  return (\n    <div data-cy=\"peoplePage\">\n      <h1 className=\"title\">People Page</h1>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"block\">\n          <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n\n            <div className=\"column\">\n              <div className=\"box table-container\">\n                {loadingError ? (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                ) : (\n                  <div>\n                    {people.length === 0 ? (\n                      <p data-cy=\"noPeopleMessage\">\n                        There are no people on the server\n                      </p>\n                    ) : (\n                      <PeopleTable\n                        people={people}\n                        filtredPeople={filtredPeople}\n                      />\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nconst NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"block\">\n            <div className=\"box table-container\">\n\n              <Routes>\n                <Route\n                  path=\"/\"\n                  element={<h1 className=\"title\">Home Page</h1>}\n                />\n                <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n                <Route path=\"/people\" element={<PeoplePage />} />\n                <Route path=\"/people/:slug\" element={<PeoplePage />} />\n                <Route path=\"*\" element={<NotFoundPage />} />\n              </Routes>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}